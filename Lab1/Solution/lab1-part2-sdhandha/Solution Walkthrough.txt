	.file	"part1-strTable.c"
	.text
	.align	2
	.global	strTable
	.type	strTable, %function
strTable:
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 0, uses_anonymous_args = 0
	stmfd	sp!, {r6}					//rm	r4, r5,
								* rm 	mov	r4, #0		//r2->#0	removed   mov	r0, r3			//removed mov	r2, #0
	add 	r1, r1, r3					//* add
	cmp	r3, #0						//cmp r4, r3->	cmp r3, #0					//r2->r4 	
	beq	.L11						//bge	.L11->jne .L11
.L9:
	sub 	r6, r3, r3, LSL #1				//*add	makes r6 = -r3
	ldrb	ip, [r1, r6]	@ zero_extendqisi2		// *edit			//ldrb	ip, [r1, r4]	@ zero_extendqisi2		//r2->r4
	mov     r6, ip						//added to save on ldr 
.L7:								//add this to loop unroll  	subpls  ip, ip, #23
	sub	ip, ip, #23					//subpls  ip, ip, #23	
	cmp	ip, #22						//subpls  ip, ip, #23
	bgt	.L7						//addmis  ip, ip, #23	
.L13:
	cmp	ip, r2						//r4->r2
	bgt	.L4						//ldrb	r3, [r5, ip]	@ zero_extendqisi2		//ldrb	r6, [r1, r2]	@ zero_extendqisi2		//r2->r4
	strb	r6, [r0, ip]					//r5->r0					
.L4:
*add	subs	r3, r3, #1					//add	r4, r4, #1	*rm	cmp	r4, r3		//r0 - > r3
*rmadd	jne	.L9						//blt	.L9 ->jne	.L9	
.L11:
	ldmfd	sp!, {r6}					//rm r4, r5,
	mov pc, lr
	.size	strTable, .-strTable
	.ident	"GCC: (GNU) 3.4.5"



-5 -1   mov    r5, r0
-5 -1   mov    r2, #0
-5 -1   mov	r0, r3


-5 -1 	sub	ip, r3, #23
-5 -1	cmp	ip, #22
-5 -3	ble	.L13


-5 -1  cmp	r3, r6
       strneb	r6, [r5, ip]			USED MOV instead 

-5 -3  ldrb	r6, [r1, r2]			Added mov r6, ip instead 
-5 -3  ldrb	r3, [r5, ip]			@ zero_extendqisi2